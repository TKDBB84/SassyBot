# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build_And_Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-ts:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: 'Installing node_modules...'
        run: npm ci
      - name: 'Linting...'
        run: npm run lint
      - name: 'Building JS...'
        run: npm run build

  automerge:
    if: ${{ github.event_name == 'pull_request' }}
    needs: [ 'build-ts', 'Analyze' ]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: automerge
        uses: fastify/github-action-merge-dependabot@v3.0.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

  deploy:
    if: ${{ github.event_name == 'push' }}
    needs: [ 'build-ts', 'Analyze' ]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - name: Pulling and building on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            source ~/.bashrc
            cd ${{ secrets.PATH }}
            git reset --hard HEAD
            git pull origin master
            nvm use 16
            npm ci
            npm run build
            npm prune --omit=dev
            pm2 restart ${{ secrets.PATH }}/ecosystem.config.js --env production --update-env
